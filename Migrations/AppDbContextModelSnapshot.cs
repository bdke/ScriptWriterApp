// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScriptWriterApp.Data;

#nullable disable

namespace ScriptWriterApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("ScriptWriterApp.Data.ChangeHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LineNum")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Origin")
                        .HasColumnType("TEXT");

                    b.Property<char?>("Status")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("ChangeHistories");
                });

            modelBuilder.Entity("ScriptWriterApp.Data.PagesData", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.Property<string>("Texts")
                        .HasColumnType("TEXT");

                    b.Property<string>("pTexts")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("PagesDatas");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Path = "/",
                            Texts = "my mom is beautiful"
                        });
                });

            modelBuilder.Entity("ScriptWriterApp.Data.TextsData", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FilePath")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LineNum")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("TextsData");
                });
#pragma warning restore 612, 618
        }
    }
}
